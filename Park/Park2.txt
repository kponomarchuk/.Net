using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Configuration;

namespace ConsolePark
{
   
    public static class AttractionSettings
    {
        public static int MinBoyHeighForBatman;

        public static int MinGirlHeighForSwan;

        public static int MaxGirlHeighForSwan;

        public static int MaxBoyHeighForSwan;

        static AttractionSettings() // static constructor
        {
             Int32.TryParse(ConfigurationManager.AppSettings["MinBoyHeighForBatman"],out MinBoyHeighForBatman);
             Int32.TryParse(ConfigurationManager.AppSettings["MinGirlHeighForSwan"],out MinGirlHeighForSwan);
             Int32.TryParse(ConfigurationManager.AppSettings["MaxGirlHeighForSwan"],out MaxGirlHeighForSwan);
             Int32.TryParse(ConfigurationManager.AppSettings["MaxBoyHeighForSwan"],out MaxBoyHeighForSwan);
            //MinBoyHeighForBatman = 150;
           // MinGirlHeighForSwan = 120;
            //MaxGirlHeighForSwan = 140;
            //MaxBoyHeighForSwan = 160;

        }

    }
    public enum DayOfWeek
    {
        Monday = 1,
        Tuesday = 2,
        Wednesday = 3,
        Thursday = 4,
        Friday = 5,
        Saturday = 6,
        Sunday = 7
    }


    class Program
    {
  

static void Main(string[] args)
{

     bool CheckAttractions(DayOfWeek dayOfWeek, string gender, int height,string attract )
    {
        if( attract.ToUpper() =="BATMAN" && (((int)dayOfWeek == 1 || (int)dayOfWeek == 3 || (int)dayOfWeek == 5) && gender == "b" && height >= AttractionSettings.MinBoyHeighForBatman))
        {
            return true;
        }


        else if  (attract.ToUpper() == "SWAN" &&  (((int)dayOfWeek == 2 || (int)dayOfWeek == 3 || (int)dayOfWeek == 4))
            && (gender == "g" && height >= AttractionSettings.MinGirlHeighForSwan && (height <= AttractionSettings.MaxGirlHeighForSwan))
            && (gender == "b" && height <= AttractionSettings.MaxBoyHeighForSwan)
        )
        {
             return true;
                }

        else if (attract.ToUpper() == "PONY" && ((int)dayOfWeek != 7))
        {
                    
            return true;
                }

        return false;


    }

    void PrintAttractCheckResults(string vUserName, string vAttraction)
    {
        Console.WriteLine(vUserName + " you can  go to " + vAttraction +"!");
            }


            //AttractionSettings magicNumbers = new AttractionSettings();
            while (true)
    {//rost den nedeli pol imja
        try
        {
            Console.WriteLine("Enter day of week! 1-Mon,2-Tue,3-Wed,4-Thu,5-Fri,6-Sat,7-Sun");
            Int32.TryParse(Console.ReadLine(), out int intDayOfWeek);
            DayOfWeek userDayOfWeek = (DayOfWeek)intDayOfWeek;
            Console.WriteLine("Enter your name!");
            String userName = Console.ReadLine();
            Console.WriteLine("Enter your gender! g - girl/b- boy");
            String userGender = Console.ReadLine();
            Console.WriteLine("Enter your height in centimeters!");
            Int32.TryParse(Console.ReadLine(), out int globUserHeight);
            Console.WriteLine($"You entered gender: {userGender}, name: {userName}, day of week: {userDayOfWeek}, height: {globUserHeight}");


                    //String minHforBatman = ConfigurationManager.AppSettings["MinimumHeighForBatman"];
            string attraction = "BATMAN";
            if (CheckAttractions(userDayOfWeek, userGender, globUserHeight, attraction))
            {
                PrintAttractCheckResults(userName, attraction);

            }
            attraction = "SWAN";
            if (CheckAttractions(userDayOfWeek, userGender, globUserHeight, attraction))
            {
                PrintAttractCheckResults(userName, attraction);

            }
            attraction = "PONY";
            if (CheckAttractions(userDayOfWeek, userGender, globUserHeight, attraction))
            {
                PrintAttractCheckResults(userName, attraction);

            }

            Console.WriteLine("Good bye!!");
            Console.ReadLine();
            break;

        }
        catch (FormatException)
        {
            Console.WriteLine($"Unable to parse");
            continue;
        }
    }
}
    }
}
